version: '2'
services:
  # --------------------------------------------------------------------------
  # Caddy
  # --------------------------------------------------------------------------
  caddy:
    image: abiosoft/caddy:latest
    restart: unless-stopped
    hostname: caddy
    env_file: .env
    volumes:
      - ./caddy/Caddyfile:/etc/Caddyfile
      - ./staticfiles:/var/www/chagrade/static
      - ./certs/caddy:/etc/caddycerts
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - django
    links:
      - django
    logging:
      options:
        max-size: "200k"
  # --------------------------------------------------------------------------
  # Django/Gunicorn
  # --------------------------------------------------------------------------
  django:
    build: .
    restart: unless-stopped
    hostname: django
    command: /usr/local/bin/gunicorn chagrade.wsgi:application -w 2 -b :8000 --reload --log-file=- --access-logfile=-
    env_file: .env
    volumes:
      - .:/app
      - ./backups:/backups
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    links:
      - postgres
    logging:
      options:
        max-size: "200k"
  # --------------------------------------------------------------------------
  # Database
  # --------------------------------------------------------------------------
  postgres:
    image: postgres:9.5
    restart: unless-stopped
    environment:
      - PGDATA=/app/var/lib/postgresql/data/pgdata
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - 5432:5432
    volumes:
      - ./var/lib/postgresql/data:/app/var/lib/postgresql/data
      - ./backups:/backups
    env_file: .env
    logging:
      options:
        max-size: "200k"
  #-----------------------------------------------
  #   Rabbitmq Service
  #-----------------------------------------------
  rabbitmq:
    image: rabbitmq:3-management
    restart: unless-stopped
    hostname: rabbit
    env_file: .env
    ports:
      - 15672:15672
      - 5672:5672
    volumes:
      - ./var/rabbitmq:/var/lib/rabbitmq/
  #-----------------------------------------------
  #   Celery Service
  #-----------------------------------------------
  celery:
    restart: unless-stopped
    hostname: celery
    command: bash -c "celery -A chagrade worker --loglevel=debug"
    working_dir: /app/
    build:
      context: .
      dockerfile: Dockerfile.celery
    depends_on:
      - rabbitmq
      - postgres
    environment:
      - DJANGO_SETTINGS_MODULE=chagrade.settings.base
    env_file: .env
    volumes:
      - .:/app

  #-----------------------------------------------
  #   Flower Service
  #-----------------------------------------------
  flower:
    restart: unless-stopped
    hostname: flower
    env_file: .env
    build:
      context: .
      dockerfile: Dockerfile.flower
    ports:
      - 15555:5555
    depends_on:
      - celery
      - rabbitmq

  #-----------------------------------------------
  # Minio local storage helper
  #-----------------------------------------------
  minio:
    image: minio/minio:RELEASE.2018-12-06T01-27-43Z
    command: server /export
    volumes:
      - ./var/minio:/export
      - ./run_minio.sh:/app/run_minio.sh
    ports:
      - $MINIO_PORT:9000
    env_file: .env

  createbuckets:
    image: minio/mc
    depends_on:
      - minio
    env_file: .env
    entrypoint: >
      /bin/sh -c "
      set -x
      while ! nc -z minio $MINIO_PORT; echo 'Waiting for minio to startup...' && sleep 0.1; sleep 3;
      /usr/bin/mc config host add minio_docker http://minio:$MINIO_PORT $MINIO_ACCESS_KEY $MINIO_SECRET_KEY;
      /usr/bin/mc mb minio_docker/$AWS_STORAGE_BUCKET_NAME;
      exit 0;
      "
